---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";

import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from '@components/shared/Title.astro';
import { Icon } from 'astro-icon/components';

export const getStaticPaths = (async () => {
    
    const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
    const { results } = await resp.json() as PokemonListResponse;

 
    return results.map( ({ name, url }) => ({
        params: {name},
        props: {name, url}
    }) )
}) satisfies GetStaticPaths;


const { name, url } = Astro.props;
const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${ id }.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;

---
<MainLayout 
    title={`Pokémon - #${ id } ${ name }`}
    description={`Información sobre el pokémon ${ name }` }    
    image = {imageSrc}
    >

    <section class="mt-10 mx-10 flex flex-col justify-center items-center ">
    <div class="flex flex-row">
        <div>
            <!-- <a href="/">Regresar</a> -->
            <button onclick="history.back()" class="text-blue-500">Regresar</button>
            <Title>{ name }</Title>
        </div>
    
        <button id="btn-favorite" class="ml-4" data-name={name} data-id={ id }>
            <Icon name="heart-outline" size={50}/>
            <Icon class="hidden" name="heart-full" size={50}/>
        </button>
    </div>

    <PokemonCard name={name} url={url} isBig/>
    <audio controls class="mt-5">
        <source src={audioSrc}>
        Your browser does not support the audio element   
    </audio>
    </section>


</MainLayout>


<script>

    interface FavoritePokemon { 
        name: string;
        id: number;
    }

    const btnFavoritePokemon = document.querySelector('#btn-favorite') as HTMLButtonElement;
    const name = btnFavoritePokemon.dataset.name;
    const id = btnFavoritePokemon.dataset.id;

    console.log(name, id);

    btnFavoritePokemon.addEventListener('click', () => {
        console.log({name, id})
    })

</script>

<style>

    a{
        @apply hover:underline text-blue-500;
    }

    #btn-favorite{
        @apply hover:animate-pulse;
    }

</style>